apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion sdkVersion
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "reminder.com.aleksandr.reminder"
        minSdkVersion 14
        targetSdkVersion sdkVersion
        versionCode 3
        versionName "3"

        ext.betaDistributionGroupAliases = "Testers"
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        checkReleaseBuilds false // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found: abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    def isRunningOnTravis = System.getenv("CI") == "true"

    if (isRunningOnTravis) {
        signingConfigs.release.storeFile = file("../decrypted_store.keystore")
        signingConfigs.release.storePassword = System.getenv("keystore_password")
        signingConfigs.release.keyAlias = 'cliniccertificate'
        signingConfigs.release.keyPassword = System.getenv("keystore_alias_password")
        def propertiesFile = file('fabric.properties')
        if (!propertiesFile.exists()) {
            def commentMessage = "This is autogenerated fabric property from system environment to prevent key to be committed to source control."
            ant.propertyfile(file: "fabric.properties", comment: commentMessage) {
                entry(key: "apiSecret", value: System.getenv("apiSecret"))
                entry(key: "apiKey", value: System.getenv("apiKey"))
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:support-v13:$supportVersion"
    implementation "com.android.support:recyclerview-v7:$supportVersion"
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation 'com.google.android.gms:play-services-ads:17.0.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.8'
}
